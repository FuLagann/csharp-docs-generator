import { HttpClient } from '@actions/http-client';
import { IHeaders } from '@actions/http-client/interfaces';
/**
 * Parses a env variable that is a number
 */
export declare function parseEnvNumber(key: string): number | undefined;
/**
 * Various utility functions to help with the necessary API calls
 */
export declare function getApiVersion(): string;
export declare function isSuccessStatusCode(statusCode?: number): boolean;
export declare function isRetryableStatusCode(statusCode?: number): boolean;
export declare function getContentRange(start: number, end: number, total: number): string;
/**
 * Sets all the necessary headers when making HTTP calls
 * @param {string} contentType the type of content being uploaded
 * @param {boolean} isKeepAlive is the same connection being used to make multiple calls
 * @param {boolean} isGzip is the connection being used to upload GZip compressed content
 * @param {number} uncompressedLength the original size of the content if something is being uploaded that has been compressed
 * @param {number} contentLength the length of the content that is being uploaded
 * @param {string} contentRange the range of the content that is being uploaded
 * @returns appropriate request options to make a specific http call
 */
export declare function getRequestOptions(contentType?: string, isKeepAlive?: boolean, isGzip?: boolean, uncompressedLength?: number, contentLength?: number, contentRange?: string): IHeaders;
export declare function createHttpClient(): HttpClient;
export declare function getArtifactUrl(): string;
/**
 * Scans the name of the artifact to make sure there are no illegal characters
 */
export declare function checkArtifactName(name: string): void;
/**
 * Scans the name of the filePath used to make sure there are no illegal characters
 */
export declare function checkArtifactFilePath(path: string): void;
export declare function createDirectoriesForArtifact(directories: string[]): Promise<void>;
